import { GetServerSideProps } from "next";
import Head from "next/head";
import { useContext } from "react";
import { Header, Hero, Modal, Row } from "src/components";
import { AuthContext } from "src/context/auth.context";
import { IMovie } from "src/interfaces/app.interface";
import { API_REQUEST } from "src/services/api.service";
import { useInfoStore } from "src/store";

export default function Home({
  trending,
  topRated,
  tvTopRated,
  documentary,
}: HomeProps): JSX.Element {
  const { isLoading, user } = useContext(AuthContext);
  const {modal} = useInfoStore()
  
  if (isLoading || !user) return <>{null}</>;

  return (
    <div className={`relative min-h-screen ${modal && '!h-screen overflow-hidden'}`}>
      <Head>
        <title>Home - Abdu</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.svg" />
      </Head>
      <Header />
      <main className="relative pl-4 pb-24 lg :space-y-24 lg:pl-16">
        <Hero trending={trending} />
        <Row title="Top Rated" movies={topRated} />
        <Row title="TV Shou" movies={tvTopRated} isBig={true} />
        <Row title="Documentary" movies={documentary.reverse()} />
        <Row title="Popular" movies={trending} />
      </main>
      {modal && <Modal />}
    </div>
  );
}

export const getServerSideProps: GetServerSideProps<HomeProps> = async () => {
  const [trending, topRated, tvTopRated, documentary] = await Promise.all([
    fetch(API_REQUEST.trending).then((res) => res.json()),
    fetch(API_REQUEST.top_rated).then((res) => res.json()),
    fetch(API_REQUEST.tv_top_rated).then((res) => res.json()),
    fetch(API_REQUEST.documentary).then((res) => res.json())
  ]) 

  return {
    props: {
      trending: trending.results,
      topRated: topRated.results,
      tvTopRated: tvTopRated.results,
      documentary: documentary.results,
    },
  };
};

interface HomeProps {
  trending: IMovie[];
  topRated: IMovie[];
  tvTopRated: IMovie[];
  documentary: IMovie[];
}
